{"version":3,"sources":["../../src/pages/chats/chats.module.ts","../../src/pages/chats/chats.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAUpC,IAAa,eAAe;IAA5B;IAA8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,eAAe;IAR3B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAS;SACV;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;SACpC;KACF,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZ+B;AACjB;AAC+B;AAChB;AAChB;AAE+B;AAOxE,IAAa,SAAS;IAUpB,mBACS,OAAsB,EACtB,SAAoB,EACpB,YAA0B,EAC1B,OAAgB,EAChB,YAA0B,EAC1B,GAAQ,EACR,iBAAoC;QAP7C,iBAeC;QAdQ,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAS;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,QAAG,GAAH,GAAG,CAAK;QACR,sBAAiB,GAAjB,iBAAiB,CAAmB;QAV7C,YAAO,GAAS,EAAE,CAAC;QACnB,kBAAa,GAAS,EAAE,CAAC;QAYvB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,gBAAM;YACpC,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBAC7D,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAQ,GAAR,UAAS,IAAW;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IAED,iCAAa,GAAb,UAAc,MAAM,EAAE,QAAQ;QAA9B,iBAkEC;QAjEC,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,eAAK;YAC9D,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,EAAE,EAAC,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC;gBACxB,GAAG,EAAC,IAAI,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;oBACrC,EAAE,EAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC;YACH,CAAC;YAED,EAAE,EAAC,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC;gBACtB,GAAG,EAAC,IAAI,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;oBACnC,EAAE,EAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC;YACH,CAAC;YAED,EAAE,EAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxB,GAAG,EAAkB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;oBAA1B,IAAI,SAAS;oBACf,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,kBAAQ;wBAC/D,IAAI,QAAQ,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,GAAG,QAAQ,GAAC,GAAG,GAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,GAAC,GAAG,GAAC,QAAQ,CAAC,CAAC;wBACzH,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;wBAExC,KAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;4BAC7D,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;4BACnC,IAAI,aAAa,GAAG,CAAC,CAAC;4BACtB,GAAG,EAAC,IAAI,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC;gCAC/B,EAAE,EAAC,QAAQ,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oCACpC,aAAa,EAAE,CAAC;gCAClB,CAAC;4BACH,CAAC;4BAED,QAAQ,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC;4BAExC,GAAG,EAAC,IAAI,GAAG,IAAI,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gCAC5B,IAAI,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC;gCAC3B,EAAE,EAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oCACtC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gCACxC,CAAC;4BACH,CAAC;4BAGD,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;gCAC7D,IAAI,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;gCACjD,IAAI,cAAc,GAAG,CAAC,CAAC;gCACvB,GAAG,EAAC,IAAI,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC;oCAC/B,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;oCACtC,EAAE,EAAC,aAAa,IAAI,cAAc,CAAC,CAAC,CAAC;wCACnC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;wCACtC,QAAQ,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC;wCAC7C,QAAQ,CAAC,iBAAiB,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC;oCACrD,CAAC;oCACD,cAAc,EAAE,CAAC;gCACnB,CAAC;4BACH,CAAC,CAAC,CAAC;4BAGH,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;wBACpC,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAY,GAAZ,UAAa,IAAQ;QACnB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IACH,gBAAC;AAAD,CAAC;AAvGY,SAAS;IALrB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACI;KAC1B,CAAC;yEAY+B;QACX,0EAAS;QACN,gEAAY;QACjB,0EAAO;QACF,2DAAY;QACrB,yFAAG;QACW,MAAiB;AAsF9C;SAvGY,SAAS,e","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ChatsPage } from './chats';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChatsPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ChatsPage),\r\n  ],\r\n})\r\nexport class ChatsPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chats/chats.module.ts","import { AuthProvider } from './../../providers/auth/auth';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, App } from 'ionic-angular';\r\nimport { ChatProvider } from '../../providers/chat/chat';\r\nimport { Storage } from '@ionic/storage';\r\nimport { FirebaseListObservable } from \"angularfire2/database\";\r\nimport { PushnotifProvider } from \"../../providers/pushnotif/pushnotif\";\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-chat',\r\n  templateUrl: 'chats.html',\r\n})\r\nexport class ChatsPage {\r\n  users:any[];\r\n  names:any;\r\n  userLoggedId:string;\r\n  title:string;\r\n  body:string;\r\n  notifList:FirebaseListObservable<any>;\r\n  friends:any[] = [];\r\n  friendOffline:any[] = [];\r\n\r\n  constructor(\r\n    public navCtrl: NavController, \r\n    public navParams: NavParams,\r\n    public chatProvider: ChatProvider,\r\n    public storage: Storage,\r\n    public authProvider: AuthProvider,\r\n    public app: App,\r\n    public pushnotifProvider: PushnotifProvider,\r\n  ) {\r\n\r\n    this.storage.get('userId').then(userId => {\r\n      this.authProvider.loggedUserMetaData(userId).subscribe(userData => {\r\n        this.loadChatUsers(userId, userData.displayName);\r\n      });\r\n    });\r\n  }\r\n\r\n  pushPage(page:string) {\r\n    this.navCtrl.push('UserslistPage');\r\n  }\r\n\r\n  loadChatUsers(userId, userName) {\r\n    this.chatProvider.loadChatUsersFriendReq(userId).subscribe(users => {\r\n      let friendArr = [];\r\n      if('friendReq' in users) {\r\n        for(let friendKey in users.friendReq) {\r\n          if(friendArr.indexOf(friendKey) == -1) {\r\n            friendArr.push(friendKey);\r\n          }\r\n        }\r\n      }\r\n\r\n      if('friends' in users) {\r\n        for(let friendKey in users.friends) {\r\n          if(friendArr.indexOf(friendKey) == -1) {\r\n            friendArr.push(friendKey);\r\n          }\r\n        }\r\n      }\r\n\r\n      if(friendArr.length > 0) {\r\n        for(let friendKey of friendArr) {\r\n          this.chatProvider.getFriendMetaData(friendKey).subscribe(userData => {\r\n            let roomName = (userName < userData.displayName ? userName+'_'+userData.displayName : userData.displayName+'_'+userName);\r\n            roomName = roomName.replace(/\\ /g, '-');\r\n\r\n            this.chatProvider.loadChatUsersFriendReq(userId).subscribe(user => {\r\n              let unreadObj = user.unreadMessage;\r\n              let unreadCounter = 0;\r\n              for(let unreadKey in unreadObj) {\r\n                if(roomName in unreadObj[unreadKey]) {\r\n                  unreadCounter++;\r\n                }\r\n              }\r\n\r\n              userData['unreadCount'] = unreadCounter;\r\n\r\n              for(let key in this.friends) {\r\n                let friends = this.friends;\r\n                if(userData.$key == friends[key].$key) {\r\n                  this.friends.splice(parseInt(key), 1);\r\n                }\r\n              }\r\n\r\n          \r\n              this.chatProvider.lastUreadMessage(roomName).subscribe(messages => {\r\n                let messageLength = Object.keys(messages).length;\r\n                let messageCounter = 1;\r\n                for(let messageKey in messages) {\r\n                  let messageObj = messages[messageKey];\r\n                  if(messageLength == messageCounter) {\r\n                    console.log('messageObj', messageObj);\r\n                    userData['lastMessage'] = messageObj.message;\r\n                    userData['lastMessageDate'] = messageObj.timestamp;\r\n                  }\r\n                  messageCounter++;\r\n                } \r\n              });\r\n              \r\n\r\n              this.friends.push(userData);\r\n              console.log('userData', userData);\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  pushChatRoom(user:any) {\r\n    this.chatProvider.chatMember(user.$key , user.displayName);\r\n    this.navCtrl.push('IndividualChatPage', user);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chats/chats.ts"],"sourceRoot":""}